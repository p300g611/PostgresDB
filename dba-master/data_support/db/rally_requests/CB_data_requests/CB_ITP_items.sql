select  distinct
             tdtv.testdevelopmentid testdevelopmentid
            ,tdtv.name testname
            ,tdtv.testsectionname
	    ,ca.name 				taskcontentareaname
	    ,case when gc.name is not null then gc.name else gb.name end  testgrade	    
            ,t.taskid                           externaltaskid
            ,tv.taskvariantid                   externaltaskvariantid
            ,t.taskname                         taskname
            ,tv.name                            variantname
            ,stt.abbreviation                   tasktypecode 
            ,stst.abbreviation                  tasksubtypecode
	    ,t.maxscore			        itemmaxscore
            ,tv.scoringmethod			Scoringmethod
            ,case when tv.approvedstatus=0 then 'Approved' else 'Unapproved' end approvedstatus
            ,case when tv.status=2 then 'Draft' else 'Complete' end status
            ,t.scoringneeded scoringneeded
	    ,o.organizationid                   organizationid
	    ,o.name                             organizationname
	    ,tt.typecode                        typecode
	    ,tst.name tasksubtypename   
	    into temp tmp_report
from cb.taskvariant tv 
   inner join organization_ o on o.organizationid=tv.organizationid
   inner join cb.task t on tv.taskid=t.taskid and o.organizationid=t.organizationid
   INNER join (select td.testdevelopmentid,td.name,tdst.taskvariantid,tds.testsectionid,tdst.position,tds.testsectionname,td.organizationid from  cb.testdevelopment td
			inner join cb.testdevelopmenttestsection tds on td.testdevelopmentid=tds.testdevelopmentid  and td.inuse is true and tds.inuse is true
			inner join cb.testdevelopmentsectiontask tdst on tdst.testdevelopmenttestsectionid=tds.testdevelopmenttestsectionid and tdst.inuse is true
			where tdst.taskvariantid is not null
			group by td.testdevelopmentid,td.name,tdst.taskvariantid,tds.testsectionid,tdst.position,tds.testsectionname,td.organizationid
			order by td.testdevelopmentid,tds.testsectionname,tdst.position
			) tdtv on tdtv.taskvariantid=tv.taskvariantid and o.organizationid=tdtv.organizationid 
--    Inner join tmp_foil tmp on tmp.taskvariantid=tv.taskvariantid
--    left outer join cb.taskcontentframeworkdetails tfd on tfd.taskid=t.taskid and o.organizationid=tfd.organizationid
--    left outer join cb.contentframeworkdetail cfd on tfd.contentframeworkdetailid=cfd.contentframeworkdetailid 
   left outer join cb.gradecourse gc on t.gradecourseid=gc.gradecourseid and o.organizationid=gc.organizationid and gc.inuse is true 
   left outer join cb.contentarea ca on t.contentareaid=ca.contentareaid and o.organizationid=ca.organizationid and ca.inuse is true 
   left outer join cb.tasktype tt on tt.tasktypeid=t.tasktypeid  and tt.inuse is true and o.organizationid=tt.organizationid
   left outer join cb.systemrecord stt on stt.id=tt.systemrecordid  and stt.inuse is true 
   left outer join cb.tasksubtype tst on t.tasksubtypeid=tst.tasksubtypeid  --and tt.tasktypeid=tst.tasktypeid  
   and tst.inuse is true
   left outer join cb.systemrecord stst on stst.id=tst.systemrecordid  and stst.inuse is true 
--    left outer join cb.cognitivetaxonomydimension ctd on ctd.cognitivetaxonomydimensionid=t.cognitivetaxonomydimensionid  and ctd.inuse is true and o.organizationid=ctd.organizationid
--    left outer join cb.taskvariantmediavariant tmtv on tv.taskvariantid=tmtv.taskvariantid and coalesce(tmp.multipartid,0)=coalesce(tmtv.multipartid,0)
--    left outer join cb.mediavariant mtv on tmtv.mediavariantid=mtv.mediavariantid and o.organizationid=mtv.organizationid and mtv.inuse is true 
--    left outer join cb.media m on m.mediaid=mtv.mediaid and o.organizationid=m.organizationid and m.inuse is true    
   left outer join cb.systemrecord gb on t.gradebandid=gb.id       
   where  tv.inuse is true and t.inuse is true and( stt.abbreviation='ITP'
and tst.name  in ( 
'Background Graphic'
,'Background Graphic Fixed'
,'Background Graphic Unlimited'
,'Labeling Copy Top'
,'Labeling Copy'
,'Labeling'
,'Venn Diagram'
,'Labeling Top'
,'Labeling Top Multiple'))
order by o.name,tv.taskvariantid; 


\copy (select * from tmp_report) to 'ITP_items.csv' (FORMAT CSV, HEADER TRUE, FORCE_QUOTE *);


select distinct status,externaltaskvariantid from tmp_report 
inner join cb.autoreuploaditpitems cb on cb.taskvariantid=externaltaskvariantid
where status ilike '%error%';


-- EP Interim window
select distinct  t.externalid
 from test t
inner join testsection ts on ts.testid = t.id
inner join testsectionstaskvariants tstv on tstv.testsectionid = ts.id
inner join taskvariant tv on tv.id = tstv.taskvariantid
inner join tasktype tt on tt.id=tv.tasktypeid 
inner join testcollectionstests tct on tct.testid=t.id
inner join operationaltestwindowstestcollections owc on owc.testcollectionid=tct.testcollectionid
and  operationaltestwindowid in (
10232,
10251);

select 
 array_to_string(array_agg(distinct td.testdevelopmentid  ), ',') testdevelopmentids ,
 array_to_string(array_agg(distinct td.name  ), ',') testnames ,
 tdst.taskvariantid 
 into temp tmp_test
from  cb.testdevelopment td
inner join cb.testdevelopmenttestsection tds on td.testdevelopmentid=tds.testdevelopmentid  and td.inuse is true and tds.inuse is true
inner join cb.testdevelopmentsectiontask tdst on tdst.testdevelopmenttestsectionid=tds.testdevelopmenttestsectionid and tdst.inuse is true
-- select count(distinct td.testdevelopmentid) from cb.testdevelopment td
where td.testdevelopmentid in (
18088,
18091,
18095,
18408,
18530,
18484,
18405,
18504,
18578,
18555,
18606,
18558,
18518,
18690,
18131,
18437,
18420,
18452,
18567,
18496,
18456,
18522,
18639,
18597,
18657,
18622,
18543,
18708,
18329,
18443,
18423,
18471,
18576,
18502,
18480,
18528,
18652,
18604,
18684,
18626,
18553,
18715,
18330,
18444,
18422,
18468,
18577,
18503,
18481,
18526,
18653,
18605,
18685,
18627,
18554,
18716,
18239,
18441,
18413,
18472,
18574,
18500,
18478,
18527,
18650,
18601,
18682,
18624,
18551,
18713,
18328,
18442,
18436,
18473,
18575,
18501,
18479,
18529,
18651,
18603,
18683,
18625,
18552,
18714,
18089,
18093,
18332,
18445,
18531,
18485,
18406,
18505,
18579,
18556,
18607,
18559,
18519,
18691,
18090,
18096,
18341,
18446,
18532,
18486,
18407,
18506,
18580,
18557,
18608,
18560,
18520,
18692,
19675,
19676,
19677,
20158,
20159,
20160,
18081,
18080,
18086,
20276,
20279,
20283,
20280,
20284,
18717,
18719,
18722,
20277,
20281,
20285,
20278,
20282,
20286,
19,
92,
95,
98,
99,
100,
101,
108,
118,
119,
120,
121,
122,
126,
127,
128,
129,
131,
132,
133,
134,
136,
137,
138,
139,
144,
147,
153,
155,
159,
161,
163,
168,
170,
182,
183,
184,
185,
186,
187,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
201,
202,
203,
204,
205,
206,
207,
208,
209,
228,
252,
253,
254,
255,
256,
259,
260,
261,
262,
263,
264,
265,
266,
274,
275,
276,
277,
278,
279,
280,
284,
285,
286,
287,
288,
290,
291,
371,
378,
379,
388,
389,
390,
392,
393,
394,
422,
425,
426,
430,
431,
432,
433,
434,
435,
436,
437,
439,
440,
442,
443,
444,
445,
541,
545,
552,
566,
581,
637,
640,
1371,
1380,
2923,
3183,
3450,
13638,
13641,
13652,
13655,
13688,
13689,
13691,
13700,
13701,
13705,
13706,
13707,
13708,
13709,
13710,
13731,
14026,
14031,
14032,
14033,
14035,
14036,
14038,
14040,
14160,
14164,
14186,
14198,
14200,
14275,
14960,
14961,
14962,
14963,
14964,
14965,
14966,
14967,
14968,
14969,
14970,
14971,
14972,
14973,
14974,
14975,
15009,
15010,
15011,
15012,
15013,
15014,
15015,
15016,
15018,
15019,
15020,
15022,
15023,
15024,
17017,
17018,
17019,
17020,
17021,
17022,
17023,
17024,
17025,
17026,
17028,
17029,
17030,
17032,
17077,
17078,
17079,
17080,
17081,
17083,
17084,
17085,
17086,
17087,
17088,
17089,
17090,
17091,
17094,
17869,
17870,
17871,
17872,
17873,
17880,
17881,
17882,
17883,
17884,
17885,
17886,
17887,
17888,
17889,
17890,
17891,
17892,
17893,
17894,
17895,
17896,
17897,
17899,
17900,
17901,
17908,
17910,
17911,
17916,
17917,
17918,
17919,
17920,
17921,
17922,
17923,
17924,
17925,
17976,
17977,
17978,
17979,
17983,
17984,
18302,
19330,
19331,
19332,
19333,
19334,
19335,
19418,
19419,
19420,
19421,
19422,
19423,
19424,
19425,
19426,
19427,
19428,
19429,
19431,
19432,
19433,
19434,
19435,
19436,
19437,
19438,
19439,
19440,
19441,
19442,
19443,
19444,
19445,
19446,
19447,
19448,
19449,
19450,
19451,
19452,
19454,
19455,
19456,
19457,
19458,
19459,
19460,
19463,
19465,
19467,
19468,
19470,
19471,
19473,
19475,
19477,
19478,
19479,
19480,
19481,
19482,
19484,
19485,
19486,
19487,
19488,
19489,
19490,
19491,
19492,
19493,
19494,
19495,
19496,
19497,
19498,
19499,
19500,
19501,
19502,
19503,
19504,
19505,
19510,
19511,
19512,
19513,
19514,
19515,
19516,
19517,
19518,
19519,
19520,
19521,
19522,
19523,
19524,
19525,
19526,
19527,
19563,
19564,
19565,
19566,
19567,
19568,
19569,
19570,
19571,
19572,
19573,
19574,
19575,
19576,
19577,
19578,
19579,
19581,
19582,
19583,
19584,
19585,
19586,
19587,
19588,
19589,
19594,
19595,
19596,
19597,
19598,
19599,
19600,
19601,
19602,
19603,
19604,
19605,
19673,
19699,
19701,
19704,
19707,
19709,
19711,
19772,
19859,
19865,
20142,
20144,
20146,
20148,
20149,
20156,
20245,
20266,
20267,
20291,
20292,
20293,
20294,
20295,
20296,
20298,
20299,
20300,
20301,
20302,
20303,
20304,
20305,
20306,
20310,
20311,
20312,
20313,
20314,
20315,
20316,
20317,
20318,
20319,
20329,
20330,
20331,
20332,
20334,
20335,
20336,
20337,
20338,
20339,
20365,
20483,
20484,
20485,
20486,
20487,
20488,
20489,
20490,
20491,
20492,
20493,
20494,
20495,
20496,
20497,
20498,
20499,
20500,
20501,
20502,
20503,
20504,
20505,
20506,
20508,
20509,
20510,
20511,
20512,
20513,
20514,
20515,
20516,
20517,
20518,
20519,
20520,
20521,
20522,
20523,
20524,
20525,
20150,
20151,
20152,
20157,
20170,
20246,
20247,
20248,
20249,
20250,
20251,
20252,
20256,
20257,
20258,
20259,
20260,
20261,
20320,
20321,
20322,
20323,
20324,
20325)
group by tdst.taskvariantid;



select au.id,au.taskvariantid,au.uuid,au.oldversion,au.status,au.errorcode,au.createdate,au.modifieddate ,o.organizationid organizationid
,o.name                             organizationname,tmp.testdevelopmentids,tmp.testnames
into temp tmp_report
 from cb.autoreuploaditpitems au 
 left outer join  cb.taskvariant tv  on tv.taskvariantid=au.taskvariantid
 left outer join organization_ o on o.organizationid=tv.organizationid
 left outer join tmp_test tmp on au.taskvariantid=tmp.taskvariantid
 where au.createdate>'2018-02-10' and au.status ilike '%error%' order by au.id desc;

\copy (select * from tmp_report) to 'ITP_items_error.csv' (FORMAT CSV, HEADER TRUE, FORCE_QUOTE *);










